import Head from "next/head";
import React, { useEffect, useState } from "react";
import Link from "next/link";
import PokemonListContainer from "../container/PokemonListContainer";
import styled from "@emotion/styled";
import Layout from "../container/Layout";
import Header from "../components/Header";
import MainContainer from "../container/MainContainer";
import FixedMainContainer from "../container/FixedMainContainer";
import { useQuery } from "@apollo/client";
import { GET_POKEMONS } from "../graphql/apis";
import { useAppContext } from "../context/state";
import { initializeApollo } from "../lib/apolloClient";
import { extractNumber } from "../lib/helpers/stringHelper";
import LoadMore from "../components/LoadMore";
import Button from "../components/Button";

export default function Home(props) {
    const state = useAppContext();

    const [pokemons, setPokemons] = useState(state.pokemons);
    const [showReadMore, setShowReadMore] = useState(null);
    const [isLoadingMore, setIsLoadingMore] = useState(false);

    const { loading, error, data, fetchMore } = useQuery(GET_POKEMONS, {
        variables: {
            limit: 10,
            offset: pokemons.length,
        },
    });

    useEffect(() => {
        console.log('awal', isLoadingMore)
        if (!isLoadingMore && data){
            const currentPokemons = pokemons;
            const newPokemons = data.pokemons.results;
            const allPokemons = currentPokemons.concat(newPokemons)
            setPokemons(allPokemons)
            state.setPokemons(allPokemons)
        }
    }, [isLoadingMore]);


    const onClickLoadMore = async () => {
        setIsLoadingMore(true);
        await fetchMore({
            variables: {
                limit: 10,
                offset: pokemons.length,
            },
        });

        setIsLoadingMore(false);
    };

    useEffect(() => {
        if (props.sPokemons.length > state.pokemons.length) {
            setPokemons(props.sPokemons)
            state.setPokemons(props.sPokemons)
            setShowReadMore(true)
        } else {
            setPokemons(state.pokemons)
            state.setPokemons(state.pokemons)
            setShowReadMore(true)
        }
    }, [state]);
    return (
        <Layout>
            <Head>
                <title>Pokedex</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
            <Header />
            <MainContainer>
                <FixedMainContainer>
                    {pokemons && <PokemonListContainer pokemons={pokemons} />}
                    <div style={{ display: "flex", justifyContent: "center", margin: "10px 0" }}>
                        {showReadMore && <Button onClick={onClickLoadMore}>Load more</Button>}
                    </div>
                </FixedMainContainer>
            </MainContainer>
        </Layout>
    );
}

export async function getServerSideProps() {
    const apolloClient = initializeApollo();

    const res = await apolloClient.query({
        query: GET_POKEMONS,
        variables: {
            limit: 10,
            offset: 0,
        },
    });

    return {
        props: {
            // data: apolloClient.cache.extract(),
            sPokemons: res.data.pokemons.results,
        },
    };
}
